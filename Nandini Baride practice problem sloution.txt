# Move files from one folder to the respective folders

#! /bin/bash -x
echo " welcome to pune "

    for file in $( ls *.txt )
do
   folder=$( echo $file | awk -F. ' { print $1 } ' )

    echo file:$file
    echo folder:$folder

    if [ -d $folder ]
then


     rm -R $folder
fi
     mkdir $folder
     mv $file $folder
done

 

# get user info from/etc/passwd/and change ownership of user's home directory (select userid higher than 1000)

   nano passwd
   cat passwd
   cat passwd | awk F: ' { print $1 } '
   cat passwd | awk F: ' { (if($3>1000) { print $3 } } '
   cat passwd | awk F: ' { print $7 } '






# Data analysis / manipulation(AWk)

i.cat data.csv | awk ' {if ($4>10000) { print $2,$7 } } '
EmployeeName TotalPay
NATHANIEL 567595
GARY 538909
ALBERT 335279
CHRISTOPHER 332343
PATRICK 326373
DAVID 316285
ALSON 315981
DAVID 307899
JOANNE 302377
PATRICIA 297608
EDWARD 294580
  
ii.cat data.csv | grep -i captain | awk ' { sum=sum+$7 } END { print sum/NR } '
390599

a>  cat data.csv | grep -i captain
2  GARY         CAPTAIN         155966  245131      137811   538909   538909
3  ALBERT       CAPTAIN         212739  106088      16452    335279   335279
12 PATRICIA     CAPTAIN         99722   87082       110804   297608   297608

b>  cat data.csv | grep -i captain | awk ' { sum=sum+$7 } END { print sum } '
1171796


iii.cat data.csv | awk ' { if(7000 <= $5 && $5 <= 10000) { print $3,$5 } } '
DEPUTYCHIEF 9737
ASSTDEPUTY 8601


iv. cat data.csv | awk ' { sum=sum+$4 } END { print sum/NR } '
157972



# Execute command "hello" and "ls" and check its execution status and print whether command executed successful or not

#! /bin/bash -x
echo " hello "
exit 1

#! /bin/bash -x
echo " ls "
exit 2



Admin@DESKTOP-QLTC3MK MINGW64 ~/Desktop/minibootcamp
$ nano movefiles.sh

Admin@DESKTOP-QLTC3MK MINGW64 ~/Desktop/minibootcamp
$ echo $?
0

Admin@DESKTOP-QLTC3MK MINGW64 ~/Desktop/minibootcamp
$ bash ./movefiles.sh
 hello

Admin@DESKTOP-QLTC3MK MINGW64 ~/Desktop/minibootcamp
$ echo $?
1

Admin@DESKTOP-QLTC3MK MINGW64 ~/Desktop/minibootcamp
$ nano movefiles.sh

Admin@DESKTOP-QLTC3MK MINGW64 ~/Desktop/minibootcamp
$ echo $?
0

Admin@DESKTOP-QLTC3MK MINGW64 ~/Desktop/minibootcamp
$ bash ./movefiles.sh
 ls

Admin@DESKTOP-QLTC3MK MINGW64 ~/Desktop/minibootcamp
$ echo $?
2


# print last frequently access urls count in sorted order from /var/log/httpd/access.log

nano access.log
cat access.log
cat access.log | awk ' { print $11 } '
cat access.log | awk ' { print $11 } ' | sort | uniq -c
cat access.log | awk ' { print $11 $4 } ' | sort | grep -i "http" | uniq -c | sort -nr | tail -4



#append current date to all log files name which ha extension.log.1 from a folder


#!/bin/bash -x


touch abc.log.1
touch def.log.1
date=$(date'+%d-%m-%y')


for file in $( ls *.log.1)

do
    name=$( echo $files | awk -F. ' { print $1 } ' )
    ext=$( echo $files | awk -F. ' { print $2 } ' )
    newfile=${name}_${date}.${ext}
    mv $file $newfilw

done


# print list 4 frequently access unique urls at particular hours from /var/log/httpd/access.log

cat access.log
cat access.log | awk ' { print $11 $3 $4} ' | sort | grep "http"
cat access.log | awk ' { print $11 $3 $4} ' | sort | grep "http" | uniq -c |  sort -nr
cat access.log | awk ' { print $11 $3 $4} ' | sort | grep "http" | uniq -c |  sort -nr | head -4


# print list of web response code count in the unique sorted order at specific hours

cat access.log
cat access.log | awk -F: ' { print $9 , $10 ,$3 , $4} ' | sort |
 cat access.log | awk  ' { print $9 , $10 ,$3 , $4} ' | sort | uniq -c | sort -nr
cat access.log | awk  ' { print $9 , $10 ,$3 , $4} ' | sort | uniq -c | sort -nr | head -4


# print list of last 10 unique sorted client ip from/var/log/httpd/access.log

cat access.log
cat access.log | awk -F: ' { print $1} ' | sort |
 cat access.log | awk  ' { print $1} ' | sort | uniq -c | sort -nr
cat access.log | awk  ' { print $1} ' | sort | uniq -c | sort -nr | head -4


#find the word "systemd " from all log files in the folder/var/log and print the number of occureence more than 0 against each file.

cat access.log | awk ' { print " systemd " } ' | uniq -c



#create process list tble display processid, parent id, parent process id , command name, % of memoey consumtion , %  of cpu consumption

 ps -lef


#check if a folder exists or not. if its not present, create it

 #!  /bin/bash
$dir= "nandu"

if [ -d "$dir" ];
then

 echo "folder already exits !!"
else
 echo "folder not exits lets created it "
    mkdir $dir
fi













 






 










